<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <!-- This project demonstrates that the package reference doesn't transfer the analyzer effect to its dependents. If
       you set ImportPackageAgain to "true" and run static code analysis on this soltuion you will get twice as many
       warnings. This is the desired behavior, shows that the analyzers only activate when they are explicitly imported.
  -->

  <ItemGroup Condition="'$(ImportPackageAgain)' == 'true'">
    <PackageReference Include="Lombiq.Analyzers.OrchardCore" Version="5.0.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Lombiq.Analyzers.PackageReference.csproj" />
  </ItemGroup>

  <!-- Fallback target for when ImportPackageAgain is not explicitly set to "true". In that case, Lombiq.Analyzers won't
       be imported, and the LombiqNetAnalyzers target won't be defined, which is needed it to trigger the
       CopyAnalyzerViolations target. -->
  <Target Name="LombiqNetAnalyzers" AfterTargets="AfterResolveReferences" Condition="'$(ImportPackageAgain)' != 'true'">
  </Target>

  <Target Name="CopyAnalyzerViolations" AfterTargets="LombiqNetAnalyzers">
    <Copy SourceFiles="..\..\AnalyzerViolations.cs" DestinationFolder="$(MSBuildThisFileDirectory)" />
  </Target>

</Project>
